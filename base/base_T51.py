'''
问题描述
　　给定n个十六进制正整数，输出它们对应的八进制数。

输入格式
　　输入的第一行为一个正整数n （1<=n<=10）。
　　接下来n行，每行一个由0~9、大写字母A~F组成的字符串，表示要转换的十六进制正整数，每个十六进制数长度不超过100000。

输出格式
　　输出n行，每行为输入对应的八进制正整数。

　　【注意】
　　输入的十六进制数不会有前导0，比如012A。
　　输出的八进制数也不能有前导0。
'''
n=int(input())
for _ in range(n):
    a=input()
    print(oct(int(a,16))[2:])
'''
十六进制 到 十进制

使用 int() 函数 ，第一个参数是字符串 '0Xff' ,第二个参数是说明，这个字符串是几进制的数。  转化的结果是一个十进制数。

>>> int('0Xf',16) 
15

二进制 到 十进制

>>> int('10100111110',2)      
1342

八进制 到 十进制

>>> int('17',8)    
15

其实可以看到，不管 几进制数 转换成 十进制数 ，都是用 int()  函数 。之后后面的 第二个参数 写清楚 前面字符串 是 几进制数就可以 。注意一定要合法。 比如2进制数就不能出现2这样的字符。

----------------------------------------------------------------------------------------------------------------------------

十进制 转 十六进制

>>> hex(1033)
'0x409'



二进制 转 十六进制

就是 二进制先转成 十进制， 再转成 十六进制。

>>> hex(int('101010',2))
'0x2a'

八进制到 十六进制

就是 八进制先转成 十进制， 再转成 十六进制。

>>> hex(int('17',8))
'0xf'

----------------------------------------------------------------------------------------------------------------------------

十进制转二进制

>>> bin(10)
'0b1010'

十六进制转 二进制

十六进制->十进制->二进制

>>> bin(int('ff',16))
'0b11111111'

八进制 到 二进制

八进制先到十进制，再到二进制

>>> bin(int('17',8))
'0b1111'



----------------------------------------------------------------------------------------------------------------------------

二进制 到 八进制

>>> oct('0b1010')        
'012'

十进制到八进制

>>> oct('11')
'013'

十六进制到八进制

>>> oct('0xf') 
'017'

可见oct 函数 可将 任意进制的数 转换成 8进制的。
'''